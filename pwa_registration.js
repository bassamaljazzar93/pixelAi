// ๐ ุชุณุฌูู PWA ูService Worker ูุญุณู ูููุณุงุนุฏ ุงูุฐูู
// ุถุน ูุฐุง ุงูููุฏ ูู ููุงูุฉ ุงูู <script> ูู index.html

// ========= ุฅุนุฏุงุฏุงุช PWA =========
let deferredPrompt = null;
let isStandalone = false;

// ูุญุต ุฅุฐุง ูุงู ุงูุชุทุจูู ูุซุจุช ูู PWA
function checkStandaloneMode() {
    isStandalone = window.matchMedia('(display-mode: standalone)').matches || 
                   window.navigator.standalone || 
                   document.referrer.includes('android-app://');
    
    if (isStandalone) {
        console.log('๐ฏ ุงูุชุทุจูู ูุนูู ูู PWA');
        document.getElementById('installBtn').style.display = 'none';
        
        // ุฅุถุงูุฉ ููุงุณ ููุชุตููู ุงููุฎุตุต ููู PWA
        document.body.classList.add('pwa-mode');
        
        // ุฅุฎูุงุก ุดุฑูุท ุงูุนููุงู ุฅุฐุง ูุงู ููุฌูุฏ
        const addressBar = document.querySelector('.address-bar');
        if (addressBar) addressBar.style.display = 'none';
    }
}

// ========= ุชุณุฌูู Service Worker =========
async function registerServiceWorker() {
    if ('serviceWorker' in navigator) {
        try {
            console.log('๐ง ุฌุงุฑู ุชุณุฌูู Service Worker...');
            
            const registration = await navigator.serviceWorker.register('/pixelAi/sw.js', {
                scope: '/pixelAi/'
            });
            
            console.log('โ Service Worker ูุณุฌู ุจูุฌุงุญ:', registration.scope);
            
            // ุงูุชุญูู ูู ุงูุชุญุฏูุซุงุช
            registration.addEventListener('updatefound', () => {
                const newWorker = registration.installing;
                console.log('๐ Service Worker ุฌุฏูุฏ ูุชุงุญ');
                
                newWorker.addEventListener('statechange', () => {
                    if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                        showUpdateNotification();
                    }
                });
            });
            
            // ุฅุดุนุงุฑ ุนูุฏ ุชูุนูู Service Worker
            if (registration.active) {
                console.log('โ Service Worker ูุดุท');
                showToast('๐ ุงูุชุทุจูู ุฌุงูุฒ ููุนูู ุจุฏูู ุงูุชุฑูุช!', 'success');
            }
            
            // ุชุณุฌูู ููุญุตูู ุนูู ุฅุดุนุงุฑุงุช ุงูุชุญุฏูุซ
            await registration.update();
            
        } catch (error) {
            console.error('โ ูุดู ุชุณุฌูู Service Worker:', error);
            // ูุง ูุนุฑุถ ุฎุทุฃ ูููุณุชุฎุฏู ูุฃู PWA ุงุฎุชูุงุฑู
        }
    } else {
        console.log('โน๏ธ Service Worker ุบูุฑ ูุฏุนูู ูู ูุฐุง ุงููุชุตูุญ');
    }
}

// ========= ุฅุฏุงุฑุฉ ุชุซุจูุช PWA =========
function setupPWAInstallation() {
    // ุงูุงุณุชูุงุน ูุญุฏุซ beforeinstallprompt
    window.addEventListener('beforeinstallprompt', (e) => {
        console.log('๐ฑ PWA ูุงุจู ููุชุซุจูุช');
        
        // ููุน ุงูุฅุดุนุงุฑ ุงูุชููุงุฆู
        e.preventDefault();
        
        // ุญูุธ ุงูุญุฏุซ ููุงุณุชุฎุฏุงู ูุงุญูุงู
        deferredPrompt = e;
        
        // ุฅุธูุงุฑ ุฒุฑ ุงูุชุซุจูุช
        const installBtn = document.getElementById('installBtn');
        if (installBtn) {
            installBtn.style.display = 'block';
            installBtn.classList.add('pulse-animation');
        }
        
        // ุฅุดุนุงุฑ ุงููุณุชุฎุฏู
        showToast('๐ฑ ููููู ุงูุขู ุชุซุจูุช ุงูุชุทุจูู!', 'info');
    });
    
    // ุงูุงุณุชูุงุน ูุญุฏุซ ุงูุชุซุจูุช
    window.addEventListener('appinstalled', (evt) => {
        console.log('๐ PWA ุชู ุชุซุจูุชู ุจูุฌุงุญ');
        showToast('๐ ุชู ุชุซุจูุช ุงูุชุทุจูู ุจูุฌุงุญ!', 'success');
        
        // ุฅุฎูุงุก ุฒุฑ ุงูุชุซุจูุช
        const installBtn = document.getElementById('installBtn');
        if (installBtn) {
            installBtn.style.display = 'none';
        }
        
        // ุฅุฑุณุงู ุฅุญุตุงุฆูุฉ (ุงุฎุชูุงุฑู)
        trackPWAInstall();
    });
}

// ========= ุชุซุจูุช PWA =========
async function installPWA() {
    if (!deferredPrompt) {
        // ุฅุฐุง ูู ููู ููุงู promptุ ูุญุงูู ุงูุทุฑู ุงูุจุฏููุฉ
        showInstallInstructions();
        return;
    }
    
    try {
        // ุฅุธูุงุฑ ูุงูุฐุฉ ุงูุชุซุจูุช
        deferredPrompt.prompt();
        
        // ุงูุชุธุงุฑ ุฑุฏ ุงููุณุชุฎุฏู
        const choiceResult = await deferredPrompt.userChoice;
        
        if (choiceResult.outcome === 'accepted') {
            console.log('โ ุงููุณุชุฎุฏู ูุจู ุชุซุจูุช PWA');
            showToast('๐ ุฌุงุฑู ุชุซุจูุช ุงูุชุทุจูู...', 'success');
        } else {
            console.log('โ ุงููุณุชุฎุฏู ุฑูุถ ุชุซุจูุช PWA');
            showToast('๐ก ููููู ุชุซุจูุช ุงูุชุทุจูู ูุงุญูุงู', 'info');
        }
        
        // ุฅุนุงุฏุฉ ุชุนููู ุงููุชุบูุฑ
        deferredPrompt = null;
        
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุชุซุจูุช PWA:', error);
        showInstallInstructions();
    }
}

// ========= ุชุนูููุงุช ุงูุชุซุจูุช ุงููุฏูู =========
function showInstallInstructions() {
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
    const isAndroid = /Android/.test(navigator.userAgent);
    
    let instructions = '';
    
    if (isIOS) {
        instructions = `
            <div style="text-align: right; line-height: 1.6;">
                <strong>๐ฑ ุชุซุจูุช ุงูุชุทุจูู ุนูู iOS:</strong><br>
                1. ุงุถุบุท ุนูู ุฒุฑ ุงููุดุงุฑูุฉ ูู Safari<br>
                2. ุงุฎุชุฑ "ุฅุถุงูุฉ ุฅูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ"<br>
                3. ุงุถุบุท "ุฅุถุงูุฉ" ููุชุฃููุฏ
            </div>
        `;
    } else if (isAndroid) {
        instructions = `
            <div style="text-align: right; line-height: 1.6;">
                <strong>๐ฑ ุชุซุจูุช ุงูุชุทุจูู ุนูู Android:</strong><br>
                1. ุงุถุบุท ุนูู โฎ ูู ูุชุตูุญ Chrome<br>
                2. ุงุฎุชุฑ "ุฅุถุงูุฉ ุฅูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ"<br>
                3. ุงุถุบุท "ุฅุถุงูุฉ" ููุชุฃููุฏ
            </div>
        `;
    } else {
        instructions = `
            <div style="text-align: right; line-height: 1.6;">
                <strong>๐ป ุชุซุจูุช ุงูุชุทุจูู:</strong><br>
                1. ุงุถุบุท ุนูู ุฃููููุฉ ุงูุชุซุจูุช ูู ุดุฑูุท ุงูุนูุงููู<br>
                2. ุฃู ุงุถุบุท Ctrl+Shift+A ูู Chrome<br>
                3. ุงุฎุชุฑ "ุชุซุจูุช ุงููุณุงุนุฏ ุงูุฐูู"
            </div>
        `;
    }
    
    // ุฅุธูุงุฑ ุงููุงูุฐุฉ ุงูููุจุซูุฉ
    const modal = document.createElement('div');
    modal.innerHTML = `
        <div style="
            position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background: rgba(0,0,0,0.8); display: flex; align-items: center;
            justify-content: center; z-index: 10000; padding: 1rem;
        ">
            <div style="
                background: white; border-radius: 15px; padding: 2rem;
                max-width: 400px; width: 100%; text-align: center;
            ">
                <h3 style="margin-bottom: 1rem; color: #333;">๐ฑ ุชุซุจูุช ุงูุชุทุจูู</h3>
                ${instructions}
                <button onclick="this.parentElement.parentElement.remove()" style="
                    background: #4F46E5; color: white; border: none;
                    padding: 10px 20px; border-radius: 10px; cursor: pointer;
                    margin-top: 1rem; font-weight: bold;
                ">ุญุณูุงู</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// ========= ุฅุดุนุงุฑ ุงูุชุญุฏูุซ =========
function showUpdateNotification() {
    const updateNotification = document.createElement('div');
    updateNotification.innerHTML = `
        <div style="
            position: fixed; bottom: 20px; right: 20px; left: 20px;
            background: linear-gradient(135deg, #4F46E5, #7C3AED);
            color: white; padding: 1rem; border-radius: 15px;
            box-shadow: 0 10px 25px rgba(79, 70, 229, 0.3);
            z-index: 10000; animation: slideIn 0.3s ease;
        ">
            <div style="display: flex; align-items: center; gap: 10px;">
                <div style="flex: 1;">
                    <strong>๐ ุชุญุฏูุซ ูุชุงุญ!</strong><br>
                    <small>ุฅุตุฏุงุฑ ุฌุฏูุฏ ูู ุงูุชุทุจูู ูุชุงุญ ุงูุขู</small>
                </div>
                <button onclick="updateApp()" style="
                    background: white; color: #4F46E5; border: none;
                    padding: 8px 16px; border-radius: 8px; cursor: pointer;
                    font-weight: bold; font-size: 0.9rem;
                ">ุชุญุฏูุซ</button>
                <button onclick="this.parentElement.parentElement.remove()" style="
                    background: rgba(255,255,255,0.2); color: white; border: none;
                    padding: 8px 16px; border-radius: 8px; cursor: pointer;
                    font-size: 0.9rem;
                ">ูุงุญูุงู</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(updateNotification);
    
    // ุฅุฒุงูุฉ ุงูุฅุดุนุงุฑ ุชููุงุฆูุงู ุจุนุฏ 10 ุซูุงูู
    setTimeout(() => {
        if (updateNotification.parentElement) {
            updateNotification.remove();
        }
    }, 10000);
}

// ========= ุชุญุฏูุซ ุงูุชุทุจูู =========
async function updateApp() {
    try {
        const registration = await navigator.serviceWorker.getRegistration('/pixelAi/');
        
        if (registration && registration.waiting) {
            // ุฅุฎุจุงุฑ Service Worker ุงูุฌุฏูุฏ ุจุงูุชูุนูู
            registration.waiting.postMessage({ type: 'SKIP_WAITING' });
            
            showToast('๐ ุฌุงุฑู ุชุญุฏูุซ ุงูุชุทุจูู...', 'info');
            
            // ุฅุนุงุฏุฉ ุชุญููู ุงูุตูุญุฉ ุจุนุฏ ุงูุชุญุฏูุซ
            setTimeout(() => {
                window.location.reload();
            }, 1000);
        } else {
            // ุฅุฌุจุงุฑ ุชุญุฏูุซ ุงูุชุณุฌูู
            await registration.update();
            window.location.reload();
        }
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุชุญุฏูุซ ุงูุชุทุจูู:', error);
        showToast('โ ุฎุทุฃ ูู ุงูุชุญุฏูุซ - ุณูุชู ุฅุนุงุฏุฉ ุงูุชุญููู', 'error');
        setTimeout(() => window.location.reload(), 2000);
    }
}

// ========= ุชุชุจุน ุงูุฅุญุตุงุฆูุงุช =========
function trackPWAInstall() {
    // ููููู ุฅุถุงูุฉ ููุฏ ุชุชุจุน ุงูุฅุญุตุงุฆูุงุช ููุง
    console.log('๐ PWA ุชู ุชุซุจูุชู - ุฅุญุตุงุฆูุฉ');
    
    // ูุซุงู: Google Analytics
    // gtag('event', 'pwa_install', { 'app_name': 'ุงููุณุงุนุฏ ุงูุฐูู' });
}

// ========= ุฅุฏุงุฑุฉ ุงูุงุชุตุงู =========
function setupNetworkMonitoring() {
    // ูุฑุงูุจุฉ ุญุงูุฉ ุงูุงุชุตุงู
    window.addEventListener('online', () => {
        console.log('๐ ุนุงุฏ ุงูุงุชุตุงู ุจุงูุฅูุชุฑูุช');
        showToast('๐ ุชู ุงุณุชุนุงุฏุฉ ุงูุงุชุตุงู!', 'success');
        
        // ุฅุนุงุฏุฉ ุชุญููู ุงููุญุชูู ุฅุฐุง ูุฒู ุงูุฃูุฑ
        if (currentTab === 'news') {
            loadNews('all');
        }
    });
    
    window.addEventListener('offline', () => {
        console.log('๐ด ุงููุทุน ุงูุงุชุตุงู ุจุงูุฅูุชุฑูุช');
        showToast('๐ด ูุถุน ุนุฏู ุงูุงุชุตุงู - ุจุนุถ ุงูููุฒุงุช ูุญุฏูุฏุฉ', 'warning');
    });
}

// ========= ุชุญุณูู ุงูุฃุฏุงุก =========
function optimizeForPWA() {
    // ุชุญุณูู ุงูุชูุฑูุฑ ุนูู ุงููุงุชู
    document.body.style.overscrollBehavior = 'none';
    
    // ููุน ุงูุชูุจูุฑ ุนูู ุงููุงุชู
    document.head.insertAdjacentHTML('beforeend', `
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    `);
    
    // ุชุญุณูู ุงูุฃุฏุงุก
    if ('requestIdleCallback' in window) {
        requestIdleCallback(() => {
            // ููุงู ุฃูู ุฃููููุฉ
            preloadCriticalResources();
        });
    }
}

// ========= ุชุญููู ุงูููุงุฑุฏ ุงููููุฉ ูุณุจูุงู =========
function preloadCriticalResources() {
    const criticalResources = [
        'https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',
        'https://api.openai.com/v1/models', // ููุชุญูู ูู ุงูุงุชุตุงู
    ];
    
    criticalResources.forEach(url => {
        const link = document.createElement('link');
        link.rel = 'prefetch';
        link.href = url;
        document.head.appendChild(link);
    });
}

// ========= ุชููุฆุฉ PWA =========
function initializePWA() {
    console.log('๐ ุชููุฆุฉ PWA...');
    
    // ุชุญุฏูุซ manifest ูู ุงูููุฏ ุงูููุฌูุฏ
    const manifestLink = document.querySelector('link[rel="manifest"]');
    if (manifestLink) {
        manifestLink.href = '/pixelAi/manifest.json';
    } else {
        // ุฅุถุงูุฉ manifest ุฅุฐุง ูู ููู ููุฌูุฏ
        const newManifest = document.createElement('link');
        newManifest.rel = 'manifest';
        newManifest.href = '/pixelAi/manifest.json';
        document.head.appendChild(newManifest);
    }
    
    // ุชุณุฌูู Service Worker
    registerServiceWorker();
    
    // ุฅุนุฏุงุฏ ุชุซุจูุช PWA
    setupPWAInstallation();
    
    // ูุญุต ูุถุน PWA
    checkStandaloneMode();
    
    // ูุฑุงูุจุฉ ุงูุดุจูุฉ
    setupNetworkMonitoring();
    
    // ุชุญุณูู ุงูุฃุฏุงุก
    optimizeForPWA();
    
    console.log('โ PWA ุฌุงูุฒ!');
}

// ========= ุชุดุบูู PWA ุนูุฏ ุชุญููู ุงูุตูุญุฉ =========
// ุฃุถู ูุฐุง ูู ููุงูุฉ ุงูููุฏ ุงูููุฌูุฏ ูู DOMContentLoaded
document.addEventListener('DOMContentLoaded', function() {
    // ุงูููุฏ ุงูููุฌูุฏ...
    
    // ุชููุฆุฉ PWA
    initializePWA();
    
    // ุฅุถุงูุฉ ุฃููุงุท CSS ููู PWA
    const pwaStyles = `
        <style>
            .pwa-mode .header {
                padding-top: env(safe-area-inset-top);
            }
            
            .pulse-animation {
                animation: pulsePWA 2s infinite;
            }
            
            @keyframes pulsePWA {
                0% { transform: scale(1); }
                50% { transform: scale(1.05); }
                100% { transform: scale(1); }
            }
            
            .install-btn {
                position: fixed;
                top: 20px;
                left: 20px;
                background: linear-gradient(135deg, #4F46E5, #7C3AED);
                color: white;
                border: none;
                padding: 12px 20px;
                border-radius: 10px;
                cursor: pointer;
                font-weight: bold;
                font-size: 0.9rem;
                z-index: 1000;
                box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
                transition: all 0.3s ease;
                display: none;
            }
            
            .install-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(79, 70, 229, 0.4);
            }
            
            @media (max-width: 768px) {
                .install-btn {
                    position: fixed;
                    bottom: 80px;
                    right: 20px;
                    left: 20px;
                    top: auto;
                    border-radius: 15px;
                    padding: 15px;
                    font-size: 1rem;
                }
            }
        </style>
    `;
    
    document.head.insertAdjacentHTML('beforeend', pwaStyles);
});

// ========= ุฅุถุงูุฉ ุงูุฃุฒุฑุงุฑ ุงููุทููุจุฉ =========
// ุชุฃูุฏ ูู ูุฌูุฏ ุฒุฑ ุงูุชุซุจูุช ูู HTML
if (!document.getElementById('installBtn')) {
    const installBtn = document.createElement('button');
    installBtn.id = 'installBtn';
    installBtn.className = 'install-btn';
    installBtn.innerHTML = '๐ฑ ุชุซุจูุช ุงูุชุทุจูู';
    installBtn.onclick = installPWA;
    document.body.appendChild(installBtn);
}

// ========= ุฅุถุงูุฉ ุฅูู window ููุงุณุชุฎุฏุงู ุงูุนุงู =========
window.installPWA = installPWA;
window.updateApp = updateApp;

console.log('๐ฏ PWA Scripts ุฌุงูุฒุฉ ูููุณุงุนุฏ ุงูุฐูู!');